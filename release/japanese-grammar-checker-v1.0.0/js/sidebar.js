import{A as x,U as d,S as T,a as v,b as Y}from"./config.js";function N(t){if(document.querySelector(".api-key-prompt")){const a=document.getElementById("apiKeyInput");if(a){a.focus();return}}const m=document.querySelector(".container"),o=document.createElement("div");o.className="api-key-prompt",o.innerHTML=`
        <h3>APIキーの設定</h3>
        <p>OpenAI APIキーを入力してください：</p>
        <input type="password" id="apiKeyInput" placeholder="sk-..." />
        <button id="saveApiKey">保存</button>
    `,m.prepend(o);const g=()=>{const a=document.getElementById("apiKeyInput").value.trim();if(!a){alert("APIキーを入力してください。");return}if(!a.startsWith("sk-")){alert('無効なAPIキー形式です。OpenAI APIキーは "sk-" で始まります。');return}if(a.length<20){alert("APIキーが短すぎます。有効なOpenAI APIキーを入力してください。");return}chrome.storage.local.set({[x.STORAGE_KEYS.API_KEY]:a},()=>{o.remove(),typeof t=="function"&&t(a)})};document.getElementById("saveApiKey").addEventListener("click",g),document.getElementById("apiKeyInput").addEventListener("keydown",a=>{a.key==="Enter"&&(a.preventDefault(),g())}),document.getElementById("apiKeyInput").focus()}async function A(){const t=document.getElementById(d.HISTORY_LIST);document.getElementById(d.HISTORY_CONTAINER);try{chrome.storage.local.get([T.KEYS.HISTORY],m=>{const o=m[T.KEYS.HISTORY]||[];if(o.length===0){t.innerHTML=`<li class="text-gray-500">${v.HISTORY_EMPTY}</li>`;return}const g=n=>n.replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;"),a=n=>g(n).replace(/\n/g,"<br>").replace(/\s{2,}/g,f=>"&nbsp;".repeat(f.length));t.innerHTML=o.map((n,E)=>`
                <li class="history-item ${E===0?"selected":""}" data-index="${E}">
                    <div class="history-item-header">
                        <div class="history-timestamp">${new Date(n.timestamp).toLocaleString("ja-JP")}</div>
                        <div class="history-actions">
                            <button class="history-copy-btn icon-button" title="修正文をコピー">📋</button>
                            <button class="history-view-original-btn icon-button" title="原文を表示">📄</button>
                            ${n.explanation?'<button class="history-view-explanation-btn icon-button" title="説明を表示">ℹ️</button>':""}
                            ${n.fullResponse?'<button class="history-view-full-btn icon-button" title="完全な応答を表示">👁️</button>':""}
                            <button class="history-delete-btn icon-button" title="削除">🗑️</button>
                        </div>
                    </div>
                    <div class="corrected-text">${a(n.correctedText)}</div>
                </li>
            `).join(""),t.querySelectorAll(".history-item").forEach(n=>{const E=parseInt(n.getAttribute("data-index"));n.addEventListener("click",p=>{if(p.target.closest(".history-actions"))return;t.querySelectorAll(".history-item").forEach(s=>{s.classList.remove("selected")}),n.classList.add("selected"),document.getElementById(d.INPUT_TEXT).value=o[E].originalText;const e=document.getElementById(d.RESULT);e.innerHTML=a(o[E].correctedText),document.getElementById(d.RESULT_CONTAINER).classList.remove("hidden")}),n.querySelector(".history-copy-btn").addEventListener("click",p=>{p.stopPropagation(),navigator.clipboard.writeText(o[E].correctedText);const e=p.target,s=e.textContent;e.textContent="✓",setTimeout(()=>{e.textContent=s},1e3)});const f=n.querySelector(".history-view-original-btn");f&&f.addEventListener("click",p=>{p.stopPropagation();const e=document.createElement("div");e.className="modal-overlay";const s=document.createElement("div");s.className="modal-content";const h=document.createElement("div");h.className="modal-header";const c=document.createElement("h3");c.textContent=v.ORIGINAL_TEXT_TITLE;const r=document.createElement("button");r.className="modal-close-btn",r.textContent="✕",r.addEventListener("click",()=>{document.body.removeChild(e)}),h.appendChild(c),h.appendChild(r);const u=document.createElement("div");u.className="modal-body";const i=document.createElement("div");i.className="original-text-modal",i.innerHTML=a(o[E].originalText),u.appendChild(i),s.appendChild(h),s.appendChild(u),e.appendChild(s),document.body.appendChild(e),e.addEventListener("click",l=>{l.target===e&&document.body.removeChild(e)})});const R=n.querySelector(".history-view-explanation-btn");R&&R.addEventListener("click",p=>{p.stopPropagation();const e=document.createElement("div");e.className="modal-overlay";const s=document.createElement("div");s.className="modal-content";const h=document.createElement("div");h.className="modal-header";const c=document.createElement("h3");c.textContent=v.EXPLANATION_TITLE;const r=document.createElement("button");r.className="modal-close-btn",r.textContent="✕",r.addEventListener("click",()=>{document.body.removeChild(e)}),h.appendChild(c),h.appendChild(r);const u=document.createElement("div");u.className="modal-body";const i=document.createElement("div");i.className="explanation-text-modal",i.innerHTML=a(o[E].explanation),u.appendChild(i),s.appendChild(h),s.appendChild(u),e.appendChild(s),document.body.appendChild(e),e.addEventListener("click",l=>{l.target===e&&document.body.removeChild(e)})});const O=n.querySelector(".history-view-full-btn");O&&O.addEventListener("click",p=>{p.stopPropagation();const e=document.createElement("div");e.className="modal-overlay";const s=document.createElement("div");s.className="modal-content";const h=document.createElement("div");h.className="modal-header";const c=document.createElement("h3");c.textContent=v.FULL_RESPONSE_TITLE;const r=document.createElement("button");r.className="modal-close-btn",r.textContent="✕",r.addEventListener("click",()=>{document.body.removeChild(e)}),h.appendChild(c),h.appendChild(r);const u=document.createElement("div");u.className="modal-body";const i=document.createElement("div");i.className="full-response-text",i.innerHTML=a(o[E].fullResponse),u.appendChild(i),s.appendChild(h),s.appendChild(u),e.appendChild(s),document.body.appendChild(e),e.addEventListener("click",l=>{l.target===e&&document.body.removeChild(e)})}),n.querySelector(".history-delete-btn").addEventListener("click",p=>{if(p.stopPropagation(),confirm("この履歴を削除しますか？")){const e=[...o];e.splice(E,1),chrome.storage.local.set({[T.KEYS.HISTORY]:e},()=>{A()})}})})})}catch(m){console.error("Failed to load history:",m),t.innerHTML=`<li class="text-red-500">${v.ERROR_PREFIX}${m.message}</li>`}}chrome.runtime.onMessage.addListener((t,m,o)=>{if(console.log("Sidebar received message:",t.action),t.action==="updateSidebarText"){console.log("Updating sidebar text with selected text");const g=document.getElementById(d.INPUT_TEXT),a=document.getElementById(d.RESULT_CONTAINER);if(g){const n=g.value.trim(),E=document.getElementById(d.RESULT);n&&!a.classList.contains("hidden")&&E&&E.textContent&&P(n,E.textContent),g.value=t.text,a&&a.classList.add("hidden"),g.focus();const f=document.getElementById(d.CLEAR_BUTTON);f&&(f.style.display=g.value.length>0?"flex":"none")}else console.error("Input text element not found"),chrome.storage.local.set({selectedText:t.text});o&&o({success:!0})}else t.action==="checkForSelectedText"&&(B(),o&&o({success:!0}));return!0});document.addEventListener("DOMContentLoaded",()=>{console.log("Sidebar loaded, checking for API key and selected text"),chrome.storage.local.get([x.STORAGE_KEYS.API_KEY],t=>{t[x.STORAGE_KEYS.API_KEY]||N()}),B(),A()});function B(){console.log("Checking for selected text in storage"),chrome.storage.local.get(["selectedText"],t=>{if(t.selectedText){console.log("Found selected text in storage:",t.selectedText.substring(0,20)+"...");const m=document.getElementById(d.INPUT_TEXT);if(m){m.value=t.selectedText;const o=document.getElementById(d.CLEAR_BUTTON);o&&(o.style.display=m.value.length>0?"flex":"none"),m.focus()}chrome.storage.local.remove(["selectedText"],()=>{console.log("Cleared selected text from storage")})}else console.log("No selected text found in storage")})}function P(t,m,o="",g=""){try{chrome.storage.local.get([T.KEYS.HISTORY],a=>{const n=a[T.KEYS.HISTORY]||[];n.unshift({timestamp:new Date().toISOString(),originalText:t,correctedText:m,fullResponse:o||m,explanation:g}),n.length>T.MAX_HISTORY_ITEMS&&(n.length=T.MAX_HISTORY_ITEMS),chrome.storage.local.set({[T.KEYS.HISTORY]:n},()=>{A()})})}catch(a){console.error("Failed to save to history:",a)}}function w(t){return t.replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}function H(t){return w(t).replace(/\n/g,"<br>").replace(/\s{2,}/g,o=>"&nbsp;".repeat(o.length))}document.addEventListener("DOMContentLoaded",()=>{const t=document.getElementById(d.INPUT_TEXT),m=document.getElementById(d.CHECK_BUTTON),o=document.getElementById(d.CLEAR_BUTTON),g=document.getElementById(d.LOADING_SPINNER),a=document.getElementById(d.RESULT_CONTAINER),n=document.getElementById(d.RESULT),E=document.getElementById(d.COPY_BUTTON),f=document.getElementById(d.CLEAR_HISTORY_BUTTON),R=document.getElementById(d.EXPORT_HISTORY_BUTTON),O=document.getElementById(d.IMPORT_HISTORY_BUTTON),p=document.getElementById(d.IMPORT_HISTORY_FILE),e=document.getElementById("historyMenuButton"),s=document.getElementById("historyMenuDropdown");e==null||e.addEventListener("click",c=>{c.stopPropagation(),s.classList.toggle("hidden")}),document.addEventListener("click",()=>{s.classList.contains("hidden")||s.classList.add("hidden")}),s==null||s.addEventListener("click",c=>{c.stopPropagation()}),O==null||O.addEventListener("click",()=>{p.click(),s.classList.add("hidden")}),p==null||p.addEventListener("change",c=>{const r=c.target.files[0];if(!r)return;const u=new FileReader;u.onload=i=>{try{const l=JSON.parse(i.target.result);if(!l.history||!Array.isArray(l.history))throw new Error("無効なファイル形式です。履歴データが見つかりません。");for(const y of l.history){if(!y.timestamp||!y.originalText||!y.correctedText)throw new Error("無効なファイル形式です。履歴項目に必要なデータが不足しています。");if(isNaN(new Date(y.timestamp).getTime()))throw new Error("無効なタイムスタンプ形式です。")}confirm(`${l.history.length}件の履歴をインポートしますか？既存の履歴と統合されます。`)&&chrome.storage.local.get([T.KEYS.HISTORY],y=>{let I=y[T.KEYS.HISTORY]||[];const b=[...l.history,...I],S=[],_=new Set;for(const L of b)_.has(L.timestamp)||(_.add(L.timestamp),S.push(L));S.sort((L,C)=>new Date(C.timestamp)-new Date(L.timestamp)),S.length>T.MAX_HISTORY_ITEMS&&(S.length=T.MAX_HISTORY_ITEMS),chrome.storage.local.set({[T.KEYS.HISTORY]:S},()=>{A(),alert(`${l.history.length}件の履歴をインポートしました。`)})})}catch(l){console.error("Failed to import history:",l),alert(`インポート中にエラーが発生しました: ${l.message}`)}p.value=""},u.readAsText(r)}),R==null||R.addEventListener("click",()=>{try{chrome.storage.local.get([T.KEYS.HISTORY],c=>{const r=c[T.KEYS.HISTORY]||[];if(r.length===0){alert("エクスポートする履歴がありません。");return}const u={exportDate:new Date().toISOString(),history:r},i=JSON.stringify(u,null,2),l=new Blob([i],{type:"application/json"}),y=URL.createObjectURL(l),I=document.createElement("a");I.href=y,I.download=`japanese-grammar-history-${new Date().toISOString().slice(0,10)}.json`,document.body.appendChild(I),I.click(),document.body.removeChild(I),URL.revokeObjectURL(y),s.classList.add("hidden")})}catch(c){console.error("Failed to export history:",c),alert(`エクスポート中にエラーが発生しました: ${c.message}`)}}),f==null||f.addEventListener("click",()=>{if(confirm("すべての履歴を削除しますか？"))try{chrome.storage.local.remove([T.KEYS.HISTORY],()=>{A(),alert(v.HISTORY_CLEARED),s.classList.add("hidden")})}catch(c){console.error("Failed to clear history:",c),alert(`${v.ERROR_PREFIX}${c.message}`)}}),o.addEventListener("click",()=>{t.value="",a.classList.add("hidden"),t.focus()}),t.addEventListener("input",()=>{o.style.display=t.value.length>0?"flex":"none"}),o.style.display="none",E.addEventListener("click",async()=>{try{await navigator.clipboard.writeText(n.textContent),E.classList.add("copied"),setTimeout(()=>{E.classList.remove("copied")},2e3)}catch(c){console.error("Failed to copy text:",c)}}),m.addEventListener("click",async()=>{if(!t.value.trim()){alert(v.EMPTY_INPUT);return}chrome.storage.local.get([x.STORAGE_KEYS.API_KEY],async c=>{const r=c[x.STORAGE_KEYS.API_KEY];if(!r){alert(v.API_KEY_MISSING),N(u=>{h(u,t.value)});return}h(r,t.value)})});async function h(c,r){var u;g.classList.remove("hidden"),a.classList.add("hidden"),n.innerHTML="",m.disabled=!0,m.textContent="処理中...";try{const i=await fetch(x.API_ENDPOINT,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${c}`},body:JSON.stringify({...x.MODEL_CONFIG,messages:[{role:"system",content:Y.GRAMMAR_CHECK},{role:"user",content:r}]})});if(!i.ok){const C=await i.json().catch(()=>({}));throw i.status===429?new Error("APIレート制限に達しました。しばらく待ってから再試行してください。"):i.status===401?new Error("APIキーが無効です。正しいAPIキーを入力してください。"):new Error(((u=C.error)==null?void 0:u.message)||`HTTP エラー: ${i.status}`)}const l=await i.json();if(l.error)throw new Error(l.error.message);if(!l.choices||!l.choices.length||!l.choices[0].message||!l.choices[0].message.content)throw new Error("APIからの応答が無効です。予期しない形式のレスポンスを受け取りました。");const y=l.choices[0].message.content;if(!y.trim())throw new Error("APIからの応答が空です。もう一度お試しください。");let I=y;const b=y.match(/```修正\n([\s\S]*?)\n```/);b&&b[1]&&(I=b[1].trim()),I.trim()||(I=y.trim());const S=y.match(/```説明\n([\s\S]*?)\n```/),_=S&&S[1]?S[1].trim():"";n.innerHTML="";const L=H(I);n.innerHTML=L,a.classList.remove("hidden"),P(r,I,y,_),setTimeout(()=>{const C=document.querySelector(".history-item");C&&(C.classList.add("selected"),document.getElementById(d.RESULT)&&document.getElementById(d.RESULT_CONTAINER).classList.remove("hidden"))},100)}catch(i){console.error("Grammar check error:",i),n.textContent=`${v.ERROR_PREFIX}${i.message}`,a.classList.remove("hidden")}finally{g.classList.add("hidden"),m.disabled=!1,m.textContent="チェック"}}});
