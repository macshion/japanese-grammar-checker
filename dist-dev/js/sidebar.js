import{T as Y}from"./modules/tabManager.js";import{G as B}from"./modules/grammar.js";import{T as w}from"./modules/translation.js";import{A as P}from"./modules/aiChat.js";import{S as k}from"./utils/storage.js";import{S as H}from"./utils/settings.js";import{U as K,A as U,S as D,M as f,a as $,I as F}from"./utils/config.js";import"./utils/api.js";const d=K,R=U,m=D,L=f,X=$;function N(){new A().showApiKeyPrompt()}function G(s,o){try{chrome.storage.local.get([m.KEYS.HISTORY],c=>{const t=c[m.KEYS.HISTORY]||[];t.unshift({timestamp:new Date().toISOString(),originalText:s,correctedText:o,fullResponse:o}),t.length>m.MAX_HISTORY_ITEMS&&(t.length=m.MAX_HISTORY_ITEMS),chrome.storage.local.set({[m.KEYS.HISTORY]:t},()=>{})})}catch(c){console.error("Failed to save to history:",c)}}class A{constructor(){this.storageService=new k,this.settingsManager=new H,this.initializeModules(),this.initializeMessageListeners(),this.initializeSettingsMenu(),this.setEnvironmentLabel()}initializeModules(){this.tabManager=new Y,this.grammarChecker=new B,this.translator=new w,this.aiChat=new P,this.tabManager.restoreActiveTab()}initializeMessageListeners(){chrome.runtime.onMessage.addListener((o,c,t)=>{if(o.action==="updateSidebarText"){switch(this.tabManager.activeTab){case"grammar":this.grammarChecker.updateText(o.text);break;case"translation":this.translator.updateText(o.text);break;case"ai-chat":this.aiChat.updateText(o.text);break}t({success:!0})}return!0}),this.storageService.getApiKey().then(o=>{o||this.showApiKeyPrompt()}),chrome.storage.local.get(["selectedText"],o=>{o.selectedText&&(this.grammarChecker.updateText(o.selectedText),chrome.storage.local.remove(["selectedText"]))})}setEnvironmentLabel(){if(F){document.title=`${f.DEV_MODE_LABEL} ${document.title}`;const o=document.createElement("div");o.className="dev-mode-tag",o.textContent=f.DEV_MODE_LABEL,document.body.appendChild(o)}}initializeSettingsMenu(){const o=document.getElementById("settingsButton"),c=document.getElementById("settingsMenuDropdown"),t=document.getElementById("importSettingsButton"),a=document.getElementById("exportSettingsButton"),T=document.getElementById("setApiKeyButton"),S=document.getElementById("importSettingsFile");o.addEventListener("click",()=>{c.classList.toggle("hidden")}),document.addEventListener("click",g=>{!o.contains(g.target)&&!c.contains(g.target)&&c.classList.add("hidden")}),t.addEventListener("click",()=>{this.settingsManager.triggerImportDialog()}),S.addEventListener("change",async g=>{if(g.target.files.length>0)try{await this.settingsManager.importSettings(g.target.files[0]),alert("設定がインポートされました。拡張機能を再読み込みしてください。")}catch(h){alert(`設定のインポートに失敗しました: ${h.message}`)}}),a.addEventListener("click",async()=>{try{await this.settingsManager.exportSettings()}catch(g){alert(`設定のエクスポートに失敗しました: ${g.message}`)}}),T.addEventListener("click",()=>{this.showApiKeyPrompt()})}showApiKeyPrompt(o){if(document.querySelector(".api-key-prompt")){const a=document.getElementById("apiKeyInput");a&&a.focus();return}const c=document.querySelector(".container"),t=document.createElement("div");t.className="api-key-prompt",t.innerHTML=`
            <h3>APIキーの設定</h3>
            <p>OpenAI APIキーを入力してください：</p>
            <input type="password" id="apiKeyInput" placeholder="sk-..." />
            <button id="saveApiKey">保存</button>
        `,c.prepend(t),document.getElementById("saveApiKey").addEventListener("click",()=>{const a=document.getElementById("apiKeyInput").value.trim();a&&this.storageService.setApiKey(a).then(()=>{t.remove(),typeof o=="function"&&o(a)})})}}document.addEventListener("DOMContentLoaded",()=>{new A});async function b(){const s=document.getElementById(d.HISTORY_LIST);document.getElementById(d.HISTORY_CONTAINER);try{chrome.storage.local.get([m.KEYS.HISTORY],o=>{const c=o[m.KEYS.HISTORY]||[];if(c.length===0){s&&(s.innerHTML=`<li class="text-gray-500">${L.HISTORY_EMPTY}</li>`);return}s&&(s.innerHTML=c.map((t,a)=>`
                    <li class="history-item border-b border-gray-200 p-4 hover:bg-gray-50 ${a===0?"selected":""}" data-index="${a}">
                        <div class="flex justify-between items-start">
                            <div class="text-sm text-gray-600">${new Date(t.timestamp).toLocaleString("ja-JP")}</div>
                            <div class="history-actions">
                                <button class="history-copy-btn icon-button" title="修正文をコピー">📋</button>
                                <button class="history-view-original-btn icon-button" title="原文を表示">📄</button>
                                ${t.explanation?'<button class="history-view-explanation-btn icon-button" title="説明を表示">ℹ️</button>':""}
                                ${t.fullResponse?'<button class="history-view-full-btn icon-button" title="完全な応答を表示">👁️</button>':""}
                                <button class="history-delete-btn icon-button" title="削除">🗑️</button>
                            </div>
                        </div>
                        <div class="mt-2 text-gray-600 corrected-text">${t.correctedText}</div>
                    </li>
                `).join(""),s.querySelectorAll(".history-item").forEach(t=>{const a=parseInt(t.getAttribute("data-index"));t.addEventListener("click",h=>{h.target.closest(".history-actions")||(s.querySelectorAll(".history-item").forEach(e=>{e.classList.remove("selected")}),t.classList.add("selected"),document.getElementById(d.INPUT_TEXT).value=c[a].originalText,document.getElementById(d.RESULT).textContent=c[a].correctedText,document.getElementById(d.RESULT_CONTAINER).classList.remove("hidden"))}),t.querySelector(".history-copy-btn").addEventListener("click",h=>{h.stopPropagation(),navigator.clipboard.writeText(c[a].correctedText);const e=h.target,l=e.textContent;e.textContent="✓",setTimeout(()=>{e.textContent=l},1e3)});const T=t.querySelector(".history-view-original-btn");T&&T.addEventListener("click",h=>{h.stopPropagation();const e=document.createElement("div");e.className="modal-overlay";const l=document.createElement("div");l.className="modal-content";const E=document.createElement("div");E.className="modal-header";const v=document.createElement("h3");v.textContent=L.ORIGINAL_TEXT_TITLE;const n=document.createElement("button");n.className="modal-close-btn",n.textContent="✕",n.addEventListener("click",()=>{document.body.removeChild(e)}),E.appendChild(v),E.appendChild(n);const i=document.createElement("div");i.className="modal-body";const r=document.createElement("pre");r.className="original-text-modal",r.textContent=c[a].originalText,i.appendChild(r),l.appendChild(E),l.appendChild(i),e.appendChild(l),document.body.appendChild(e),e.addEventListener("click",p=>{p.target===e&&document.body.removeChild(e)})});const S=t.querySelector(".history-view-explanation-btn");S&&S.addEventListener("click",h=>{h.stopPropagation();const e=document.createElement("div");e.className="modal-overlay";const l=document.createElement("div");l.className="modal-content";const E=document.createElement("div");E.className="modal-header";const v=document.createElement("h3");v.textContent=L.EXPLANATION_TITLE;const n=document.createElement("button");n.className="modal-close-btn",n.textContent="✕",n.addEventListener("click",()=>{document.body.removeChild(e)}),E.appendChild(v),E.appendChild(n);const i=document.createElement("div");i.className="modal-body";const r=document.createElement("pre");r.className="explanation-text-modal",r.textContent=c[a].explanation,i.appendChild(r),l.appendChild(E),l.appendChild(i),e.appendChild(l),document.body.appendChild(e),e.addEventListener("click",p=>{p.target===e&&document.body.removeChild(e)})});const g=t.querySelector(".history-view-full-btn");g&&g.addEventListener("click",h=>{h.stopPropagation();const e=document.createElement("div");e.className="modal-overlay";const l=document.createElement("div");l.className="modal-content";const E=document.createElement("div");E.className="modal-header";const v=document.createElement("h3");v.textContent=L.FULL_RESPONSE_TITLE;const n=document.createElement("button");n.className="modal-close-btn",n.textContent="✕",n.addEventListener("click",()=>{document.body.removeChild(e)}),E.appendChild(v),E.appendChild(n);const i=document.createElement("div");i.className="modal-body";const r=document.createElement("pre");r.className="full-response-text",r.textContent=c[a].fullResponse,i.appendChild(r),l.appendChild(E),l.appendChild(i),e.appendChild(l),document.body.appendChild(e),e.addEventListener("click",p=>{p.target===e&&document.body.removeChild(e)})}),t.querySelector(".history-delete-btn").addEventListener("click",h=>{if(h.stopPropagation(),confirm("この履歴を削除しますか？")){const e=[...c];e.splice(a,1),chrome.storage.local.set({[m.KEYS.HISTORY]:e},()=>{b()})}})}))})}catch(o){console.error("Failed to load history:",o),s&&(s.innerHTML=`<li class="text-red-500">${L.ERROR_PREFIX}${o.message}</li>`)}}chrome.runtime.onMessage.addListener((s,o,c)=>{if(s.action==="updateSidebarText"){const t=document.getElementById(d.INPUT_TEXT),a=document.getElementById(d.RESULT_CONTAINER);if(t){const T=t.value.trim(),S=document.getElementById(d.RESULT);T&&!a.classList.contains("hidden")&&S&&S.textContent&&G(T,S.textContent),t.value=s.text,a&&a.classList.add("hidden")}}return!0});document.addEventListener("DOMContentLoaded",()=>{chrome.storage.local.get([R.API_KEY],s=>{s[R.API_KEY]||N()}),chrome.storage.local.get(["selectedText"],s=>{s.selectedText&&(document.getElementById(d.INPUT_TEXT).value=s.selectedText,chrome.storage.local.remove(["selectedText"]))}),b()});document.addEventListener("DOMContentLoaded",()=>{const s=document.getElementById(d.INPUT_TEXT),o=document.getElementById(d.CHECK_BUTTON),c=document.getElementById(d.CLEAR_BUTTON),t=document.getElementById(d.LOADING_SPINNER),a=document.getElementById(d.RESULT_CONTAINER),T=document.getElementById(d.RESULT),S=document.getElementById(d.COPY_BUTTON),g=document.getElementById(d.HISTORY_CLEAR_BUTTON),h=document.getElementById(d.HISTORY_EXPORT_BUTTON),e=document.getElementById(d.HISTORY_IMPORT_BUTTON),l=document.getElementById(d.HISTORY_IMPORT_FILE);e==null||e.addEventListener("click",()=>{l.click()}),l==null||l.addEventListener("change",n=>{const i=n.target.files[0];if(!i)return;const r=new FileReader;r.onload=p=>{try{const u=JSON.parse(p.target.result);if(!u.history||!Array.isArray(u.history))throw new Error("無効なファイル形式です。");confirm(`${u.history.length}件の履歴をインポートしますか？既存の履歴と統合されます。`)&&chrome.storage.local.get([m.KEYS.HISTORY],y=>{let I=y[m.KEYS.HISTORY]||[];const x=[...u.history,...I],C=[],_=new Set;for(const O of x)_.has(O.timestamp)||(_.add(O.timestamp),C.push(O));C.sort((O,M)=>new Date(M.timestamp)-new Date(O.timestamp)),C.length>m.MAX_HISTORY_ITEMS&&(C.length=m.MAX_HISTORY_ITEMS),chrome.storage.local.set({[m.KEYS.HISTORY]:C},()=>{b(),alert(`${u.history.length}件の履歴をインポートしました。`)})})}catch(u){console.error("Failed to import history:",u),alert(`インポート中にエラーが発生しました: ${u.message}`)}l.value=""},r.readAsText(i)}),h==null||h.addEventListener("click",()=>{try{chrome.storage.local.get([m.KEYS.HISTORY],n=>{const i=n[m.KEYS.HISTORY]||[];if(i.length===0){alert("エクスポートする履歴がありません。");return}const r={exportDate:new Date().toISOString(),history:i},p=JSON.stringify(r,null,2),u=new Blob([p],{type:"application/json"}),y=URL.createObjectURL(u),I=document.createElement("a");I.href=y,I.download=`japanese-grammar-history-${new Date().toISOString().slice(0,10)}.json`,document.body.appendChild(I),I.click(),document.body.removeChild(I),URL.revokeObjectURL(y)})}catch(n){console.error("Failed to export history:",n),alert(`エクスポート中にエラーが発生しました: ${n.message}`)}}),g==null||g.addEventListener("click",()=>{if(confirm("すべての履歴を削除しますか？"))try{chrome.storage.local.remove([m.KEYS.HISTORY],()=>{b(),alert(L.HISTORY_CLEARED)})}catch(n){console.error("Failed to clear history:",n),alert(`${L.ERROR_PREFIX}${n.message}`)}}),c.addEventListener("click",()=>{s.value="",a.classList.add("hidden"),s.focus()}),s.addEventListener("input",()=>{c.style.display=s.value.length>0?"flex":"none"}),c.style.display="none",S.addEventListener("click",async()=>{try{await navigator.clipboard.writeText(T.textContent),S.classList.add("copied"),setTimeout(()=>{S.classList.remove("copied")},2e3)}catch(n){console.error("Failed to copy text:",n)}}),o.addEventListener("click",async()=>{if(!s.value.trim()){alert(L.EMPTY_INPUT);return}chrome.storage.local.get([R.API_KEY],async n=>{const i=n[R.API_KEY];if(!i){alert(L.API_KEY_MISSING),N();return}v(i,s.value)})});function E(n,i,r="",p=""){try{chrome.storage.local.get([m.KEYS.HISTORY],u=>{const y=u[m.KEYS.HISTORY]||[];y.unshift({timestamp:new Date().toISOString(),originalText:n,correctedText:i,fullResponse:r||i,explanation:p}),y.length>m.MAX_HISTORY_ITEMS&&(y.length=m.MAX_HISTORY_ITEMS),chrome.storage.local.set({[m.KEYS.HISTORY]:y},()=>{b()})})}catch(u){console.error("Failed to save to history:",u)}}async function v(n,i){t.classList.remove("hidden"),a.classList.add("hidden"),T.textContent="";try{const r=await(await fetch(R.ENDPOINT,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify({...R.MODEL_CONFIG,messages:[{role:"system",content:X.GRAMMAR_CHECK},{role:"user",content:i}]})})).json();if(r.error)throw new Error(r.error.message);const p=r.choices[0].message.content;let u=p;const y=p.match(/```修正\n([\s\S]*?)\n```/);y&&y[1]&&(u=y[1].trim());const I=p.match(/```説明\n([\s\S]*?)\n```/),x=I&&I[1]?I[1].trim():"";T.textContent=u,a.classList.remove("hidden"),E(i,u,p,x),setTimeout(()=>{const C=document.querySelector(".history-item");C&&(C.classList.add("selected"),document.getElementById(d.RESULT).textContent=u,document.getElementById(d.RESULT_CONTAINER).classList.remove("hidden"))},100)}catch(r){T.textContent=`${L.ERROR_PREFIX}${r.message}`,a.classList.remove("hidden")}finally{t.classList.add("hidden")}}});
