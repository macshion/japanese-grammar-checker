import{A as n}from"../utils/api.js";import{S as a}from"../utils/storage.js";import{U as e,M as s}from"../utils/config.js";class h{constructor(){this.apiService=new n,this.storageService=new a,this.initializeElements(),this.initializeEventListeners()}initializeElements(){this.inputText=document.getElementById(e.CHAT_INPUT),this.sendButton=document.getElementById(e.CHAT_SEND_BUTTON),this.clearButton=document.getElementById(e.CHAT_CLEAR_BUTTON),this.loadingSpinner=document.getElementById(e.CHAT_LOADING),this.resultContainer=document.getElementById(e.CHAT_RESULT_CONTAINER),this.result=document.getElementById(e.CHAT_RESULT),this.copyButton=document.getElementById(e.CHAT_COPY_BUTTON)}initializeEventListeners(){this.clearButton.addEventListener("click",()=>{this.inputText.value="",this.resultContainer.classList.add("hidden"),this.inputText.focus(),this.updateClearButtonVisibility()}),this.inputText.addEventListener("input",()=>{this.updateClearButtonVisibility()}),this.sendButton.addEventListener("click",()=>{this.sendMessage()}),this.inputText.addEventListener("keydown",t=>{t.key==="Enter"&&!t.shiftKey&&(t.preventDefault(),this.sendMessage())}),this.copyButton.addEventListener("click",async()=>{try{await navigator.clipboard.writeText(this.result.textContent),this.copyButton.classList.add("copied"),setTimeout(()=>{this.copyButton.classList.remove("copied")},2e3)}catch(t){console.error("Failed to copy text:",t)}})}updateClearButtonVisibility(){this.clearButton.style.display=this.inputText.value.length>0?"flex":"none"}async sendMessage(){const t=this.inputText.value.trim();if(!t){alert(s.EMPTY_INPUT);return}this.loadingSpinner.classList.remove("hidden"),this.resultContainer.classList.add("hidden");try{const i=await this.apiService.chat(t);this.result.textContent=i,this.resultContainer.classList.remove("hidden"),await this.storageService.addToHistory({type:"chat",question:t,answer:i})}catch(i){this.result.textContent=`${s.ERROR_PREFIX}${i.message}`,this.resultContainer.classList.remove("hidden")}finally{this.loadingSpinner.classList.add("hidden")}}updateText(t){this.inputText.value=t,this.updateClearButtonVisibility(),this.resultContainer.classList.add("hidden")}}export{h as A};
