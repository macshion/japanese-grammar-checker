import{A as u}from"../utils/api.js";import{S as l}from"../utils/storage.js";import{U as i,L as s,M as r,H as g}from"../utils/config.js";class T{constructor(){this.apiService=new u,this.storageService=new l,this.initializeElements(),this.initializeLanguageOptions(),this.initializeEventListeners()}initializeElements(){this.inputText=document.getElementById(i.TRANSLATION_INPUT),this.sourceLanguage=document.getElementById(i.TRANSLATION_SOURCE),this.targetLanguage=document.getElementById(i.TRANSLATION_TARGET),this.translateButton=document.getElementById(i.TRANSLATION_BUTTON),this.clearButton=document.getElementById(i.TRANSLATION_CLEAR_BUTTON),this.loadingSpinner=document.getElementById(i.TRANSLATION_LOADING),this.resultContainer=document.getElementById(i.TRANSLATION_RESULT_CONTAINER),this.result=document.getElementById(i.TRANSLATION_RESULT),this.copyButton=document.getElementById(i.TRANSLATION_COPY_BUTTON)}initializeLanguageOptions(){this.sourceLanguage.innerHTML="",this.targetLanguage.innerHTML="",Object.entries(s.LANGUAGES).forEach(([t,e])=>{const n=document.createElement("option");n.value=t,n.textContent=e,this.sourceLanguage.appendChild(n);const a=document.createElement("option");a.value=t,a.textContent=e,this.targetLanguage.appendChild(a)}),this.sourceLanguage.value=s.DEFAULT_SOURCE,this.targetLanguage.value=s.DEFAULT_TARGET}initializeEventListeners(){this.clearButton.addEventListener("click",()=>{this.inputText.value="",this.resultContainer.classList.add("hidden"),this.inputText.focus(),this.updateClearButtonVisibility()}),this.inputText.addEventListener("input",()=>{this.updateClearButtonVisibility()}),this.translateButton.addEventListener("click",()=>{this.translate()}),this.copyButton.addEventListener("click",async()=>{try{await navigator.clipboard.writeText(this.result.textContent),this.copyButton.classList.add("copied"),setTimeout(()=>{this.copyButton.classList.remove("copied")},2e3)}catch(t){console.error("Failed to copy text:",t)}}),this.sourceLanguage.addEventListener("change",()=>{this.validateLanguageSelection()}),this.targetLanguage.addEventListener("change",()=>{this.validateLanguageSelection()})}validateLanguageSelection(){const t=this.sourceLanguage.value,e=this.targetLanguage.value;if(t===e){const a=Object.keys(s.LANGUAGES).find(o=>o!==t);a&&(this.targetLanguage.value=a)}return!s.LANGUAGES[t]||!s.LANGUAGES[e]?(alert(r.INVALID_LANGUAGE),!1):!0}updateClearButtonVisibility(){this.clearButton.style.display=this.inputText.value.length>0?"flex":"none"}getLanguageName(t){return s.LANGUAGES[t]||t}async translate(){const t=this.inputText.value.trim();if(!t){alert(r.EMPTY_INPUT);return}if(this.validateLanguageSelection()){this.loadingSpinner.classList.remove("hidden"),this.resultContainer.classList.add("hidden");try{const e=this.getLanguageName(this.sourceLanguage.value),n=this.getLanguageName(this.targetLanguage.value),a=await this.apiService.translate(t,e,n);this.result.textContent=a,this.resultContainer.classList.remove("hidden"),await this.storageService.addToHistory({type:g.TYPES.TRANSLATION,originalText:t,translatedText:a,sourceLanguage:e,targetLanguage:n})}catch(e){this.result.textContent=`${r.ERROR_PREFIX}${e.message}`,this.resultContainer.classList.remove("hidden")}finally{this.loadingSpinner.classList.add("hidden")}}}updateText(t){this.inputText.value=t,this.updateClearButtonVisibility(),this.resultContainer.classList.add("hidden")}}export{T};
