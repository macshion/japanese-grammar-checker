import{A as c}from"../utils/api.js";import{S as l}from"../utils/storage.js";import{U as e,M as o}from"../utils/config.js";class p{constructor(){this.apiService=new c,this.storageService=new l,this.initializeElements(),this.initializeEventListeners()}initializeElements(){this.inputText=document.getElementById(e.GRAMMAR_INPUT),this.checkButton=document.getElementById(e.GRAMMAR_CHECK_BUTTON),this.clearButton=document.getElementById(e.GRAMMAR_CLEAR_BUTTON),this.loadingSpinner=document.getElementById(e.GRAMMAR_LOADING),this.resultContainer=document.getElementById(e.GRAMMAR_RESULT_CONTAINER),this.result=document.getElementById(e.GRAMMAR_RESULT),this.copyButton=document.getElementById(e.GRAMMAR_COPY_BUTTON)}initializeEventListeners(){this.clearButton.addEventListener("click",()=>{this.inputText.value="",this.resultContainer.classList.add("hidden"),this.inputText.focus(),this.updateClearButtonVisibility()}),this.inputText.addEventListener("input",()=>{this.updateClearButtonVisibility()}),this.checkButton.addEventListener("click",()=>{this.checkGrammar()}),this.copyButton.addEventListener("click",async()=>{try{await navigator.clipboard.writeText(this.result.textContent),this.copyButton.classList.add("copied"),setTimeout(()=>{this.copyButton.classList.remove("copied")},2e3)}catch(t){console.error("Failed to copy text:",t)}})}updateClearButtonVisibility(){this.clearButton.style.display=this.inputText.value.length>0?"flex":"none"}async checkGrammar(){const t=this.inputText.value.trim();if(!t){alert(o.EMPTY_INPUT);return}this.loadingSpinner.classList.remove("hidden"),this.resultContainer.classList.add("hidden");try{const i=await this.apiService.checkGrammar(t);let s=i,r="";const n=i.match(/```修正\n([\s\S]*?)\n```/),a=i.match(/```説明\n([\s\S]*?)\n```/);n&&n[1]&&(s=n[1].trim()),a&&a[1]&&(r=a[1].trim()),this.result.textContent=s,this.resultContainer.classList.remove("hidden"),await this.storageService.addToHistory({type:"grammar",originalText:t,correctedText:s,explanation:r,fullResponse:i})}catch(i){this.result.textContent=`${o.ERROR_PREFIX}${i.message}`,this.resultContainer.classList.remove("hidden")}finally{this.loadingSpinner.classList.add("hidden")}}updateText(t){this.inputText.value=t,this.updateClearButtonVisibility(),this.resultContainer.classList.add("hidden")}}export{p as G};
